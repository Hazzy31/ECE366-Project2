main:
    # Load n from memory
    la   $t0, n_val
    lw   $t1, 0($t0)             # $t1 = n

    # Base case: if n <= 1, return n
    li   $t2, 1
    ble  $t1, $t2, store_and_exit

    # Initialize a = 0, b = 1
    li   $t3, 0                  # $t3 = a
    li   $t4, 1                  # $t4 = b

    # Compute n - 1 for loop count
    addi $t5, $t1, -1            # $t5 = n - 1 (loop counter)

loop:
    beq  $t5, $zero, store_and_exit

    # temp = b
    move $t6, $t4

    # b = a + b
    add  $t4, $t3, $t4

    # a = temp
    move $t3, $t6

    # decrement loop counter
    addi $t5, $t5, -1

    j loop

store_and_exit:
    # Store final result (b)
    la   $t7, fib_result
    sw   $t4, 0($t7)

    # Exit
    j end
